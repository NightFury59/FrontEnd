function deepEquals(valueOne, valueTwo) {
  /* Basic Check */
  if(typeof valueOne !== typeof valueTwo) return false

  /* Nan */
  if(Number.isNaN(valueOne)) return Number.isNaN(valueTwo)

  /* Array vs Non-Array */
  if(Array.isArray(valueOne) && !Array.isArray(valueTwo)) return false
  if(Array.isArray(valueTwo) && !Array.isArray(valueOne)) return false

  /* Null Types */
  if(valueOne === null) return valueTwo === null
  if(valueTwo === null) return valueOne === null

  /* Matching elements of array */
  if(Array.isArray(valueOne)) {
    if(valueOne.length !== valueTwo.length) return false
    return valueOne.every((item, index) => {
      return deepEquals(item, valueTwo[index])
    })
  }

  /* Match every item of both the objects */
  if(typeof valueOne === "object") {
    let oneKeys = Object.keys(valueOne)
    let twoKeys = Object.keys(valueTwo)
    if(oneKeys.length !== twoKeys.length) return false

    return oneKeys.every((key) => {
      if(!valueTwo.hasOwnProperty(key)) return false
      return deepEquals(valueOne[key], valueTwo[key])
    })
  }

  return valueOne === valueTwo
}

// Do not edit the line below.
exports.deepEquals = deepEquals;
